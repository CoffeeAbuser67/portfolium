import { useSpringRef, useSpring, animated, useSprings } from "react-spring";
//@ts-ignore
import { interpolate } from "flubber";

import { useLogo } from "./context/LogoContext";

const parrotData = {
  offset: ["0", "0.103", "0.294", "0.444", "0.532", "0.765", "1"],
  colors: [
    "#000",
    "#001a0e",
    "#004425",
    "#005e33",
    "#006838",
    "#006738",
    "#026437",
  ],
};

const parrotPaths = [
  "M502.86 270.11c5.23-1.44 9.94-3.88 14.1-7.35 1.35-1.12 2.67-2.29 3.37-3.95.5-1.17-.19-2.1-1.46-1.93-.71.1-1.42.32-2.09.58-2.64 1.04-5.25 2.17-7.91 3.18-1.9.73-3.85 1.32-5.8 1.98 2.1-1.4 4.16-2.76 6.21-4.15 3.14-2.13 5.96-4.63 8.25-7.66.81-1.07 1.41-2.31 1.97-3.53.45-.97-.28-1.88-1.34-1.73-.55.08-1.12.3-1.59.6-3.64 2.33-7.23 4.73-10.89 7.02-1.93 1.21-3.97 2.26-5.95 3.38.09-.38.29-.6.51-.78 4.44-3.76 8.44-7.92 11.39-12.98.82-1.4 1.45-2.92 2.06-4.43.25-.62.34-1.39-.36-1.89-.71-.5-1.4-.26-1.99.23-.63.52-1.22 1.08-1.8 1.65-2.41 2.41-4.77 4.87-7.24 7.22-1.58 1.51-3.31 2.86-4.97 4.28-.05-.05-.1-.1-.14-.16l.21-.27c3.08-3.82 5.9-7.8 7.5-12.49.43-1.26.62-2.64.73-3.97.03-.42-.46-1.07-.88-1.29-.29-.15-.91.21-1.31.47-.31.2-.51.58-.73.9-2.12 3.11-4.12 6.31-6.37 9.32-4.11 5.5-8.96 10.35-14.07 14.92-1.61 1.44-3.3 2.78-5.05 4.26.02-.55.05-.88.03-1.21-.02-.33-.04-.67-.14-.98-.29-.92-.96-1.17-1.74-.61-.53.38-.95.93-1.45 1.34-2.43 1.98-4.78 10.83-6.52 14.29l-.08-.14c-4.06-5.08-9.17-8.77-15.73-9.96-2.48-.45-4.95-.25-7.28.81-1.45.66-2.65 1.59-2.82 3.37-.01.16-.14.34-.27.44-4 3.03-4.12 10.14.05 13.77.45.39.99.66 1.7 1.12-.88-2.25-1.31-4.21.04-6.18 1.62 1.38 3.58 1.55 5.55 1.71 2.2.18 3.78 1.55 4.15 3.75.24 1.45.31 2.94.39 4.41.49 8.42 3.95 15.4 10.12 21.07.98.9 2.03 1.71 3.1 2.5 1.38 1.03 1.14 3.54-.47 4.03-.63.19-1.23.66-1.72 1.13-2.45 2.36-2.2 6.14.53 8.55 1.09.96 2.34 1.64 3.85 1.51.34-.03.65-.35.97-.54-.17-.27-.28-.6-.51-.79-1.52-1.25-2.13-2.89-2.14-4.87 1.15 2.1 2.37 2.95 4.13 3 1.08.03 2.75-1 2.4-2.26-.65.08-1.29.23-1.94.23-.98 0-1.63-.67-1.63-1.55 0-1 .59-1.6 1.63-1.66.39-.02.78-.06 1.17-.11 1.6-.23 2.45-1.32 2.27-2.91-.03-.27-.03-.55-.04-.76 1.48.74 2.91 1.45 4.31 2.19.24.13.47.4.55.66 1.57 4.71 3.99 9 6.62 13.16 1.49 2.36 3.24 4.57 4.93 6.81.22.3.76.45 1.17.47.15.01.32-.57.49-.9.06.08.16.19.24.31.42.63.85 1.25 1.26 1.89 2.97 4.64 6.14 9.13 10 13.09.75.77 1.6 1.5 2.54 2 1.37.73 2.63-.15 2.22-1.59-.51-1.81-1.14-3.66-2.13-5.24-2.83-4.49-5.88-8.85-8.84-13.26-.31-.47-.64-.92-.97-1.39 2.54 2.33 4.91 4.78 7.33 7.2.81.81 1.65 1.61 2.6 2.24.41.27 1.24.29 1.64.04.3-.19.35-1 .29-1.51-.07-.51-.35-1.04-.66-1.47-1.38-1.91-2.8-3.79-4.22-5.67-1.05-1.39-2.12-2.76-2.7-3.51 1.51.72 3.75 1.88 6.06 2.88 2.09.91 4.25 1.68 6.41 2.44.32.11.78-.18 1.18-.29-.16-.39-.22-.91-.5-1.16-.73-.62-1.53-1.19-2.36-1.66-4.04-2.29-8.12-4.52-12.16-6.83-3.7-2.11-7.46-4.15-10.61-7.06-1.04-.96-1.89-2.11-2.83-3.17.07-.07.14-.14.22-.21.17.1.35.19.51.31 3.81 2.83 7.8 5.38 12.12 7.38 1.39.65 2.81 1.24 4.25 1.77.32.12.77-.1 1.16-.16-.18-.38-.26-.87-.55-1.12-.55-.47-1.19-.82-1.83-1.17-4.35-2.41-8.54-5.05-11.99-8.69-1.42-1.5-2.74-3.11-4.06-4.71.39-.01.79-.04 1.19-.11 1.62-.27 2.02-1.22 1.04-2.55-.43-.58-.96-1.09-1.46-1.61-.78-.8-1.58-1.59-2.23-2.24 1.68.3 3.47.76 5.28.91 1.27.1 2.59-.11 3.84-.38.52-.11 1.16-.68 1.31-1.18.12-.41-.35-1.05-.66-1.52-.2-.31-.57-.53-.89-.75-1.31-.9-2.63-1.78-4.15-2.81.52.12.8.19 1.08.26 2.17.49 4.35.77 6.54.22.42-.11 1-.55 1.05-.91.06-.37-.33-.95-.69-1.23-.68-.53-1.5-.89-2.24-1.36-1.14-.74-2.26-1.51-3.39-2.27 2.84.58 5.62.88 8.44.56 1.65-.19 3.33-.35 4.76-1.31 1.08-.72 1.08-1.87.01-2.59-.55-.36-1.16-.64-1.77-.9-1.33-.57-2.67-1.09-3.98-1.62 1.74-.11 3.46-.18 5.16-.36 1.01-.11 2.06-.3 2.99-.69 1.41-.58 2.83-1.23 4.06-2.11 1.06-.76.77-1.99-.44-2.47-.75-.3-1.55-.5-2.35-.63-1.72-.27-3.46-.47-5.18-.69 4.28-.2 8.21-1.48 11.77-3.8 1.19-.78 2.32-1.76 3.18-2.88.88-1.13.35-2.07-1.05-2.33-.47-.09-.97-.14-1.43-.08-2.22.26-4.43.56-6.64.84-2.4.31-4.81.61-7.21.91.13-.22.27-.28.41-.32zm-53.58 1.7c-.67-.03-1.24-.67-1.19-1.33.05-.7.7-1.29 1.38-1.26.75.04 1.36.64 1.33 1.31-.03.63-.82 1.3-1.52 1.28z",
  "M493.37 328.95c-.91-1.05-1.84-2.1-2.82-3.1-2.14-2.19-4.31-4.34-6.45-6.52-.23-.23-.39-.58-.47-.9-1.01-4.17-1.87-8.37-3-12.5-2.36-8.58-6.16-16.44-12.05-23.23-1.22-1.41-2.06-3.18-2.92-4.87-1.39-2.73-2.77-5.44-4.99-7.64-2.32-2.29-5.17-3.39-8.31-3.85-2.83-.41-5.58-.11-8.16 1.16-.77.38-1.47.99-2.03 1.64-.33.37-.5 1.05-.43 1.55.08.5.01.83-.27 1.22-2.61 3.6-1.99 7.99.49 11.11.2.25.41.51.67.69.24.17.56.22.84.33 0-.29.06-.6 0-.88-.24-1.12-.54-2.22-.78-3.34-.05-.25.02-.52.03-.79.97.48 1.84.94 2.74 1.33.77.34 1.56.33 2.34-.02.92-.41 1.72-.21 2.42.49 1.01 1.01 1.42 2.28 1.48 3.64.08 1.63-.02 3.27.01 4.91.09 4.35 1.13 8.46 3.03 12.38 1.47 3.03 3.42 5.74 5.27 8.52.17.26 3.63 4.39 6.78 8.29l-.5 4.43c-.23-.02-.46-.03-.69-.03-.52 0-1.04.05-1.54.18s-1 .35-1.43.7c-.29.23-.54.52-.74.86-.29.49-.12 1.11.36 1.4.49.29 1.11.12 1.4-.36.08-.13.16-.22.27-.31.11-.09.24-.16.4-.23.32-.13.77-.2 1.29-.2.54 0 1.14.07 1.73.19.6.12 1.19.28 1.71.44 1.04.33 1.81.66 1.83.67.43.19.93.06 1.21-.3 1.66 5.4 3.39 10.78 5.1 16.16 2.62 8.26 5.21 16.54 7.89 24.78.98 3.03 2.18 5.99 3.28 8.97.09.25.2.5.31.74.5 1.11 1.16 1.54 1.93 1.28.69-.24 1.06-1.18.81-2.22-1.07-4.37-2.17-8.74-3.23-13.11-1.94-7.97-3.86-15.94-5.77-23.91-.68-2.81-1.32-5.63-1.97-8.45-.06-.28-.08-.57.02-.94.93 1.04 1.89 2.07 2.8 3.14 1.2 1.41 2.37 2.84 3.55 4.26.14.16.29.33.46.45.5.37 1.06.59 1.64.24.58-.35.69-.96.5-1.56-.2-.64-.47-1.25-.74-1.86-.72-1.58-1.45-3.16-2.24-4.86.27.09.43.14.58.2 1.19.56 2.37 1.14 3.56 1.69.39.18.81.29 1.22.41.7.21 1.36.13 1.78-.54.41-.66.3-1.36-.2-1.93zm-45.42-54.74c-1.36-.01-2.41-1.18-2.4-2.67.01-1.43 1.16-2.63 2.49-2.59 1.41.04 2.41 1.1 2.42 2.55 0 1.46-1.16 2.72-2.51 2.71zm22.57 49.77c-.53-.19-1.21-.41-1.95-.59l.27-2.27c.97 1.23 1.8 2.33 2.36 3.12a7.69 7.69 0 0 0-.68-.26z",
];

const Parrot = () => {
  const { ready, coloring, setColoring } = useLogo();
  const interpolator = interpolate(...parrotPaths);
  const parrotAPI = useSpringRef();
  const parrotAPIColor = useSpringRef();

  const S2 = useSpring({
    ref: parrotAPI,
    delay: 3500,
    from: {
      transform: "translatex(25%) translatey(-35%)",
    },
    to: {
      transform: "translatex(0%) translatey(0%)",
    },
    config: {
      clamp: true,
      mass: 10,
      friction: 45,
      tension: 50,
    },
    onRest: () => {
      setColoring(true);
    },
  });

  const { S } = useSpring({
    ref: parrotAPI,
    delay: 7000,
    from: { S: 0 },
    to: { S: 1 },
    config: {
      duration: 500,
      clamp: true,
    },
  });

  const [parrotColors] = useSprings(7, (i) => ({
    ref: parrotAPIColor,
    delay: 2000,
    from: {
      c: "black",
      o: "0",
    },

    to: {
      c: parrotData["colors"][i],
      o: parrotData["offset"][i],
    },
    config: {
      mass: 50,
      friction: 100,
      tension: 40,
    },
  }));

  if (ready) {
    parrotAPI.start();
  }

  if (coloring) {
    parrotAPIColor.start();
  }

  return (
    <>
      <linearGradient
        id="parrot_c_"
        x1={429.562}
        x2={520.421}
        y1={287.665}
        y2={360.06}
        gradientUnits="userSpaceOnUse"
      >
        {parrotColors.map(({ c, o }, i) => (
          <animated.stop offset={o} stopColor={c} key={`pc_${i}`} />
        ))}
      </linearGradient>
      <animated.g style={S2}>
        <animated.path
          d={S.to((X) => interpolator(X))}
          fill="url(#parrot_c_)"
        />
      </animated.g>
    </>
  );
};

export default Parrot;
